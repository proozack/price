"""empty message

Revision ID: 9a35b76ab9df
Revises: 95e86ce2269d
Create Date: 2021-12-01 22:58:56.093746

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '9a35b76ab9df'
down_revision = '95e86ce2269d'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('tager_tag_synonym')
    op.drop_table('tager_context')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('tager_context',
    sa.Column('id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('name', sa.TEXT(), autoincrement=False, nullable=False, comment='Context definition'),
    sa.Column('active', sa.BOOLEAN(), autoincrement=False, nullable=False, comment='Is record is active'),
    sa.Column('deleted', sa.BOOLEAN(), autoincrement=False, nullable=False, comment='Is record is deleted'),
    sa.Column('created_by', sa.INTEGER(), autoincrement=False, nullable=False, comment='Who created record'),
    sa.Column('creation_date', postgresql.TIMESTAMP(), autoincrement=False, nullable=False, comment='Timestamp created record'),
    sa.Column('last_update_by', sa.INTEGER(), autoincrement=False, nullable=True, comment='Who last update record'),
    sa.Column('last_update_date', postgresql.TIMESTAMP(), autoincrement=False, nullable=True, comment='Timestamp last update record'),
    sa.PrimaryKeyConstraint('id', name='tager_context_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('tager_tag_synonym',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('value', sa.TEXT(), autoincrement=False, nullable=False, comment='Tag value synonym'),
    sa.Column('meaning', sa.TEXT(), autoincrement=False, nullable=False, comment='Tags meaning'),
    sa.Column('tager_keys_id', sa.INTEGER(), autoincrement=False, nullable=False, comment='FK to tager_tag.id table'),
    sa.Column('tager_context_id', sa.INTEGER(), autoincrement=False, nullable=False, comment='FK to imp_catalog_page.id table, The context of the use of the tag'),
    sa.Column('context', sa.TEXT(), autoincrement=False, nullable=False, comment='The context of the use of the tag'),
    sa.Column('context_value', sa.TEXT(), autoincrement=False, nullable=False, comment='context - loose link'),
    sa.Column('active', sa.BOOLEAN(), autoincrement=False, nullable=False, comment='Is record is active'),
    sa.Column('deleted', sa.BOOLEAN(), autoincrement=False, nullable=False, comment='Is record is deleted'),
    sa.Column('created_by', sa.INTEGER(), autoincrement=False, nullable=False, comment='Who created record'),
    sa.Column('creation_date', postgresql.TIMESTAMP(), autoincrement=False, nullable=False, comment='Timestamp created record'),
    sa.Column('last_update_by', sa.INTEGER(), autoincrement=False, nullable=True, comment='Who last update record'),
    sa.Column('last_update_date', postgresql.TIMESTAMP(), autoincrement=False, nullable=True, comment='Timestamp last update record'),
    sa.ForeignKeyConstraint(['tager_context_id'], ['tager_context.id'], name='tager_tag_synonym_tager_context_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='tager_tag_synonym_pkey'),
    sa.UniqueConstraint('tager_context_id', name='tager_tag_synonym_tager_context_id_key'),
    sa.UniqueConstraint('tager_keys_id', name='tager_tag_synonym_tager_keys_id_key')
    )
    # ### end Alembic commands ###
